- alias: Set theme at startup
  id: automation_startup_theme
  initial_state: 'on'
  trigger:
  - platform: homeassistant
    event: start
  action:
  - data:
      name: Light - Navy Blue
    service: frontend.set_theme
- id: automation_sceneselect
  alias: Scene select update
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.scene
  action:
    service: scene.turn_on
    data_template:
      entity_id: scene.{{trigger.to_state.state}}
- id: automation_eveningscene
  alias: Automatic evening scene
  trigger:
  - platform: state
    entity_id: sensor.time_of_day
    to: Evening
  condition:
  - condition: state
    entity_id: group.everyone
    state: home
  action:
  - service: scene.turn_on
    data:
      entity_id: scene.evening
  initial_state: 'on'
  mode: single
- id: automation_telegram_mss
  alias: Telegram - Motion Sensor Security
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: binary_sensor.yicam_motion
    to: 'on'
  condition:
  - condition: state
    entity_id: group.everyone
    state: not_home
  - condition: template
    value_template: '{{ ((as_timestamp(now()) - as_timestamp(states.automation.telegram_motion_sensor_security.attributes["last_triggered"]))/60)|round
      > 60 }}'
  action:
  - service: telegram_bot.send_photo
    data:
      caption: 'Alert: Motion sensor was triggered but no one is home!'
      disable_notification: false
      url: http://192.168.1.207:8080/cgi-bin/snapshot.sh
      username: cas
      password: wTHAideaWmAhORaNiCOsphIlYbOrDAtc
- id: automation_telegram_lightsonnotify
  alias: Telegram - Forgotten lights notify
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: group.everyone
    to: not_home
    for:
      seconds: 300
  condition:
    condition: state
    entity_id: group.all_lights
    state: 'on'
  action:
    service: telegram_bot.send_message
    data:
      title: üö® *Alert* üö®
      message: No one is home but not all lights are off!
      disable_notification: false
      inline_keyboard:
      - Turn off the lights:/turnofflights, Ignore:/ignore
- id: automation_telegram_lightsoff
  alias: Telegram - Turn off lights inline
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /turnofflights
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: Turning off all lights...
  - service: light.turn_off
    data:
      entity_id: group.all_lights
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: last
      chat_id: '{{ trigger.event.data.chat_id }}'
      inline_keyboard: []
- id: automation_telegram_ignore
  alias: Telegram - Ignore alert inline
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /ignore
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: üëç
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: last
      chat_id: '{{ trigger.event.data.chat_id }}'
      inline_keyboard: []
- id: automation_telegram_snap
  alias: Telegram - Camera snapshot
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      data: /snap
  action:
  - service: telegram_bot.send_photo
    data:
      disable_notification: false
      url: http://192.168.1.207:8080/cgi-bin/snapshot.sh
      username: cas
      password: wTHAideaWmAhORaNiCOsphIlYbOrDAtc
- alias: Wakeup Light
  id: automation_wakeuplight
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: binary_sensor.next_alarm_within15min
    to: 'on'
  condition:
  - condition: state
    entity_id: light.bedroom
    state: 'off'
  action:
  - service: light.turn_on
    data:
      entity_id: light.bedroom
      effect: Wakeuplight
- alias: Welcome home
  id: automation_welcomehome
  initial_state: 'off'
  trigger:
  - platform: state
    entity_id: device_tracker.iphone_cas_bt, device_tracker.galaxys8_debby_bt
    to: home
    for:
      seconds: 30
  action:
  - service: tts.google_say
    entity_id: media_player.homecas
    data_template:
      message: '''Welcome home, {{ trigger.from_state.attributes.friendly_name.split(''
        '', 1)[0] }}'''
- alias: Hallway motion light (on)
  id: automation_motionlighton_hallway
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: binary_sensor.motionsensor_hallway_occupancy
    to: 'on'
  condition:
  - condition: state
    entity_id: light.hallwayceiling
    state: 'off'
  action:
  - service: light.turn_on
    data_template:
      entity_id: '{% if is_state("input_select.scene", "Night") %} light.hallwayceiling
        {% else %} light.hallwayceiling, light.hallwaystanding_light {% endif %}'
      transition: '{% if is_state("input_select.scene", "Night") %} 3 {% else %} 1
        {% endif %}'
      brightness: '{% if is_state("input_select.scene", "Night") %} 1 {% else %} 100
        {% endif %}'
      kelvin: '{% if is_state("input_select.scene", "Night") %} 1500 {% else %} 2700
        {% endif %}'
  - service: homeassistant.turn_on
    entity_id: automation.hallway_motion_light_off
- alias: Hallway motion light (off)
  id: automation_motionlightoff_hallway
  initial_state: 'off'
  trigger:
  - platform: state
    entity_id: binary_sensor.motionsensor_hallway_occupancy
    to: 'off'
    for:
      minutes: 2
  action:
  - service: light.turn_off
    data_template:
      entity_id: '{% if is_state("input_select.scene", "Night") %} light.hallwayceiling
        {% else %} light.hallwayceiling, light.hallwaystanding_light {% endif %}'
      transition: 2
  - service: homeassistant.turn_off
    entity_id: automation.hallway_motion_light_off
- alias: Toilet motion light (on)
  id: automation_motionlighton_toilet
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: binary_sensor.motionsensor_toilet_occupancy
    to: 'on'
  condition:
  - condition: state
    entity_id: light.toilet
    state: 'off'
  action:
  - service: light.turn_on
    data_template:
      entity_id: light.toilet
      transition: '{% if is_state("input_select.scene", "Night") %} 3 {% else %} 1
        {% endif %}'
      brightness: '{% if is_state("input_select.scene", "Night") %} 1 {% else %} 100
        {% endif %}'
      kelvin: '{% if is_state("input_select.scene", "Night") %} 1500 {% else %} 2700
        {% endif %}'
  - service: homeassistant.turn_on
    entity_id: automation.toilet_motion_light_off
- alias: Toilet motion light (off)
  id: automation_motionlightoff_toilet
  initial_state: 'off'
  trigger:
  - platform: state
    entity_id: binary_sensor.motionsensor_toilet_occupancy
    to: 'off'
    for:
      minutes: 1.5
  action:
  - service: light.turn_off
    data:
      entity_id: light.toilet
      transition: 2
  - service: homeassistant.turn_off
    entity_id: automation.toilet_motion_light_off
- alias: Scene next button
  id: automation_button_scenenext
  initial_state: 'on'
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/xiaomibutton
  condition:
  - condition: template
    value_template: '{{ trigger.payload_json.click == "single" }}'
  action:
  - service: input_select.select_next
    data_template:
      entity_id: input_select.scene
- alias: Scene previous button
  id: automation_button_sceneprev
  initial_state: 'on'
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/xiaomibutton
  condition:
  - condition: template
    value_template: '{{ trigger.payload_json.click == "double" }}'
  action:
  - service: input_select.select_previous
    data_template:
      entity_id: input_select.scene
- alias: Living room light switch
  id: automation_livingroom_lightswitch
  initial_state: 'on'
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/xiaomiswitch1
  condition:
  - condition: template
    value_template: '{{ trigger.payload_json.click == "left" or trigger.payload_json.click
      == "right" }}'
  action:
  - service: light.toggle
    data_template:
      entity_id: '{% if trigger.payload_json.click == "right" %} light.living_room_spots
        {% elif trigger.payload_json.click == "left" %} light.livingroom {% endif
        %}'
- alias: Bedroom light switch left
  id: automation_bedroom_lightswitchleft
  initial_state: 'on'
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/xiaomiswitch2
  condition:
  - condition: template
    value_template: '{{ trigger.payload_json.click == "left" }}'
  action:
  - service: light.toggle
    data:
      entity_id: light.bedroom
- alias: Bedroom light switch right
  id: automation_bedroom_lightswitchright
  initial_state: 'on'
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/xiaomiswitch2
  condition:
  - condition: template
    value_template: '{{ trigger.payload_json.click == "right" }}'
  action:
  - service: light.turn_on
    data:
      entity_id: light.bedroom
      transition: 1
      kelvin: 2700
      brightness_pct: 80
- alias: Bedroom light switch both
  id: automation_bedroom_lightswitchboth
  initial_state: 'on'
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/xiaomiswitch2
  condition:
  - condition: template
    value_template: '{{ trigger.payload_json.click == "both" }}'
  action:
  - service: input_select.select_next
    data_template:
      entity_id: input_select.scene
- id: '1597038859483'
  alias: Vakantie Security
  description: ''
  trigger:
  - device_id: f3a72c9e8ec246538669a7d3e6fd7baf
    domain: binary_sensor
    entity_id: binary_sensor.motionsensor_hallway_occupancy
    platform: device
    type: motion
  condition: []
  action:
  - data:
      message: Someone entered the house üëÄ
      title: Security Alert
    service: notify.mobile_app_iphone
  mode: single
- id: '1603048240409'
  alias: IOS Widget - Set Scene
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionID: C83408B8-ABF2-485F-B977-B47D374BE58B
  condition: []
  action:
  - service: script.set_scene
    data: {}
  mode: single
- id: '1603048305311'
  alias: IOS Widget - Reset Scene
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionID: 3266D340-A610-40B2-A932-71A392CB9981
  condition: []
  action:
  - service: script.reset_scene
    data: {}
  mode: single
- id: '1603048329895'
  alias: IOS Widget - All lights off
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionID: 2CC23350-60EB-49B6-A3FB-2E91E3068D69
  condition: []
  action:
  - service: light.turn_off
    data:
      entity_id: all
  mode: single
